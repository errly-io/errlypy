name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Verify Python version
      run: python --version
    - name: Install uv
      run: |
        python -m venv .venv
        source .venv/bin/activate
        curl -LsSf https://astral.sh/uv/install.sh | sh
    - name: Configure uv to use project venv
      run: ~/.local/bin/uv venv .venv
    - name: Generate requirements-dev.lock
      run: ~/.local/bin/uv pip compile pyproject.toml -o requirements-dev.lock --all-extras
    - name: Cache uv dependencies
      id: cached-uv-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements-dev.lock') }}
    - name: Install dependencies
      run: ~/.local/bin/uv pip sync requirements-dev.lock
    - name: Run tests
      run: ~/.local/bin/uv run pytest tests/
